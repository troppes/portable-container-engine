name: Create Release

on:
  workflow_dispatch:
    inputs:
      minor:
        description: 'Minor version number (defaults to 1 if no release exists for current month)'
        required: false
        type: string
      draft:
        description: 'Create a draft release'
        required: false
        type: boolean
        default: false
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Generate CalVer tag
        id: calver
        run: |
          # Get current year and month
          YEAR=$(date +%Y)
          MONTH=$(date +%m)
          BASE_VERSION="${YEAR}.${MONTH}"
          
          # If minor version is provided, use it
          if [ -n "${{ inputs.minor }}" ]; then
            MINOR="${{ inputs.minor }}"
          else
            # Find the latest tag for current month
            LATEST_TAG=$(git tag -l "${BASE_VERSION}.*" | sort -V | tail -n 1)
            if [ -n "$LATEST_TAG" ]; then
              CURRENT_MINOR=$(echo $LATEST_TAG | cut -d. -f3)
              MINOR=$((CURRENT_MINOR + 1))
            else
              MINOR=1
            fi
          fi
          
          # Construct the new tag
          NEW_TAG="${BASE_VERSION}.${MINOR}"
          echo "new_tag=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "Calculated new tag: ${NEW_TAG}"

      - name: Create Release Tag
        run: |
          git tag ${{ steps.calver.outputs.new_tag }}
          git push origin ${{ steps.calver.outputs.new_tag }}

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get the latest tag before the one we just created
          PREVIOUS_TAG=$(git tag --sort=-v:refname | grep -v ${{ steps.calver.outputs.new_tag }} | head -n 1)
          
          if [ -n "$PREVIOUS_TAG" ]; then
            # Generate release notes from commits between tags
            echo "CHANGES<<EOF" >> $GITHUB_OUTPUT
            echo "## Changes since ${PREVIOUS_TAG}" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s" ${PREVIOUS_TAG}..${{ steps.calver.outputs.new_tag }} >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            # First release
            echo "CHANGES<<EOF" >> $GITHUB_OUTPUT
            echo "## Initial Release" >> $GITHUB_OUTPUT
            echo "" >> $GITHUB_OUTPUT
            git log --pretty=format:"* %s" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.calver.outputs.new_tag }}
          name: Release ${{ steps.calver.outputs.new_tag }}
          body: ${{ steps.release_notes.outputs.CHANGES }}
          draft: ${{ inputs.draft }}
          prerelease: ${{ inputs.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
